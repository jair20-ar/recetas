<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Registro</title>
    <style>
      /* Mantengo los estilos originales */
      :root {
        --bg-color: linear-gradient(135deg, #1a1a40, #0c0c1c);
        --text-color: #ffffff;
        --form-bg: rgba(255, 255, 255, 0.1);
        --form-border: rgba(255, 255, 255, 0.2);
        --form-shadow: rgba(0, 0, 0, 0.3);
        --input-bg: rgba(255, 255, 255, 0.2);
        --input-border: rgba(255, 255, 255, 0.3);
        --input-focus-border: #6c63ff;
        --button-bg: #6c63ff;
        --button-hover-bg: #836fff;
        --star-color: rgba(255, 255, 255, 0.8);
      }

      body {
        margin: 0;
        font-family: 'Arial', sans-serif;
        background: var(--bg-color);
        color: var(--text-color);
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
        overflow: hidden;
        text-align: center;
      }

      h1 {
        font-size: 2.5rem;
        margin-bottom: 1.5rem;
        text-shadow: 0 0 20px var(--button-bg);
      }

      form {
        background: var(--form-bg);
        border: 1px solid var(--form-border);
        border-radius: 15px;
        box-shadow: 0 4px 15px var(--form-shadow);
        padding: 2rem;
        width: 90%;
        max-width: 400px;
        backdrop-filter: blur(10px);
        text-align: center;
      }

      input {
        width: 100%;
        margin: 0.5rem 0;
        padding: 0.8rem;
        border: 1px solid var(--input-border);
        border-radius: 5px;
        background: var(--input-bg);
        color: var(--text-color);
        font-size: 1rem;
        transition: border 0.3s;
      }

      input:focus {
        outline: none;
        border-color: var(--input-focus-border);
        box-shadow: 0 0 10px var(--input-focus-border);
      }

      button {
        margin-top: 1rem;
        padding: 0.8rem 2rem;
        background: var(--button-bg);
        color: var(--text-color);
        border: none;
        border-radius: 5px;
        font-size: 1rem;
        cursor: pointer;
        transition: background 0.3s, transform 0.2s;
        width: 100%;
      }

      button:hover {
        background: var(--button-hover-bg);
        transform: translateY(-2px);
      }

      .stars {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        overflow: hidden;
        z-index: -1;
      }

      .stars span {
        position: absolute;
        display: block;
        width: 2px;
        height: 2px;
        background: var(--star-color);
        animation: twinkle 2s infinite ease-in-out;
      }

      @keyframes twinkle {
        0%, 100% {
          opacity: 0.8;
        }
        50% {
          opacity: 0.2;
        }
      }
    </style>
  </head>
  <body>
    <div class="stars"></div>
    <h1>Registro</h1>
    <form id="register-form">
      <input type="text" id="name" placeholder="Su nombre completo" required />
      <input type="email" id="email" placeholder="Correo electrónico" required />
      <input type="password" id="password" placeholder="Contraseña" required />
      <button type="submit">Registrarse</button>
    </form>
    <div id="message"></div>
    <script>
      document.addEventListener('DOMContentLoaded', () => {
        const form = document.getElementById('register-form');
        const messageDiv = document.getElementById('message');

        form.addEventListener('submit', async (event) => {
          event.preventDefault();

          const name = document.getElementById('name').value.trim();
          const email = document.getElementById('email').value.trim();
          const password = document.getElementById('password').value.trim();

          try {
            const response = await fetch('http://localhost:4322/api/register', {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify({ name, email, password }),
            });

            const data = await response.json();
            if (response.ok) {
              messageDiv.textContent = data.message || "Registro exitoso.";
              messageDiv.style.color = "green";
            } else {
              messageDiv.textContent = data.error || "Error al registrarse.";
              messageDiv.style.color = "red";
            }
          } catch (error) {
            messageDiv.textContent = "Error de conexión al servidor.";
            messageDiv.style.color = "red";
          }
        });
      });
    </script>
  </body>
</html>