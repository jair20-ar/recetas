---
--- 
<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Página Principal</title>
    <style>
      :root {
        --bg-color: linear-gradient(135deg, #610000, #9c0720, #f1666d);
        --text-color: #ffffff;
        --form-bg: rgba(255, 255, 255, 0.2);
        --form-border: rgba(255, 255, 255, 0.3);
        --form-shadow: rgba(0, 0, 0, 0.4);
        --input-bg: #ffffff;
        --input-border: rgba(0, 0, 0, 0.2);
        --input-focus-border: #9c0720;
        --button-bg: linear-gradient(90deg, #9c0720, #610000);
        --button-hover-bg: linear-gradient(90deg, #610000, #9c0720);
        --button-shadow: rgba(156, 7, 32, 0.5);
        --link-color: #ffffff;
        --link-hover-color: #f1666d;
      }

      body {
        margin: 0;
        font-family: 'Arial', sans-serif;
        background: var(--bg-color);
        color: var(--text-color);
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        height: 100vh;
        overflow: hidden;
        text-align: center;
        position: relative;
      }

      .background-design {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: linear-gradient(135deg, #610000, #9c0720, #f1666d);
        clip-path: polygon(
          25% 0%,
          100% 0%,
          75% 50%,
          100% 100%,
          25% 100%,
          0% 50%
        );
        z-index: 0;
        opacity: 0.9;
      }

      h1 {
        font-size: 2.8rem;
        margin-bottom: 1.5rem;
        color: var(--text-color);
        text-shadow: 0 3px 10px rgba(0, 0, 0, 0.5);
      }

      nav {
        background: var(--form-bg);
        border: 1px solid var(--form-border);
        border-radius: 15px;
        box-shadow: 0 4px 15px var(--form-shadow);
        padding: 1rem;
        width: 90%;
        max-width: 600px;
        backdrop-filter: blur(10px);
        display: flex;
        justify-content: space-around;
        margin-bottom: 2rem;
        position: relative;
        z-index: 1;
      }

      nav a {
        color: var(--text-color);
        text-decoration: none;
        font-size: 1.2rem;
        transition: color 0.3s;
      }

      nav a:hover {
        color: var(--link-hover-color);
      }

      section {
        width: 90%;
        max-width: 600px;
        text-align: center;
        background: var(--form-bg);
        border: 1px solid var(--form-border);
        border-radius: 15px;
        box-shadow: 0 4px 15px var(--form-shadow);
        padding: 2rem;
        backdrop-filter: blur(10px);
        animation: fadeIn 1.5s ease-out;
        position: relative;
        z-index: 1;
      }

      .user-info {
        margin-bottom: 1rem;
        font-size: 1.2rem;
        color: var(--link-color);
      }

      #modal {
        display: none;
        position: fixed;
        z-index: 1000;
        left: 0;
        top: 0;
        width: 100vw;
        height: 100vh;
        background: rgba(0,0,0,0.6);
        justify-content: center;
        align-items: center;
      }
      #modal.active {
        display: flex;
        overflow-y: auto;
        align-items: flex-start;
      }
      #recipeForm {
        background: #fff;
        color: #222;
        border-radius: 10px;
        padding: 2rem;
        box-shadow: 0 4px 15px rgba(156,7,32,0.2);
        min-width: 320px;
        display: flex;
        flex-direction: column;
        gap: 1rem;
        position:relative;
        max-width: 90vw;
        max-height: 80vh;
        overflow-y: auto;
      }
      #recipeForm label {
        text-align:left;
        font-weight: bold;
      }
      #recipeForm input[type="text"],
      #recipeForm textarea,
      #recipeForm select {
        width: 100%;
        border: 1px solid var(--input-border);
        border-radius: 5px;
        padding: 0.5rem;
        box-sizing: border-box;
        margin-top: 4px;
      }
      #recipeForm textarea {
        resize: vertical;
        min-height: 50px;
      }
      #recipeForm input[type="file"] {
        display: none;
      }
      #customImageBtn {
        background: var(--button-bg);
        color: #fff;
        border: none;
        padding: 0.6rem 1.3rem;
        border-radius: 6px;
        box-shadow: 0 2px 8px var(--button-shadow);
        cursor: pointer;
        font-size: 1rem;
        transition: background 0.3s;
      }
      #customImageBtn:hover {
        background: var(--button-hover-bg);
      }
      #imageFileName {
        color: #9c0720;
        font-size: 0.99rem;
      }
      #addIngredientBtn {
        background: var(--button-bg);
        color: #fff;
        border: none;
        padding: 0.3rem 1rem;
        border-radius: 5px;
        box-shadow: 0 2px 4px var(--button-shadow);
        margin-top: 0.4rem;
        cursor: pointer;
        font-size: 0.98rem;
        transition: background 0.3s;
      }
      #addIngredientBtn:hover {
        background: var(--button-hover-bg);
      }
      .removeIngredientBtn {
        background: none;
        border: none;
        color: #9c0720;
        font-size: 1.3rem;
        cursor: pointer;
        margin-left: 0.2rem;
      }
      #recipeForm button[type="submit"] {
        background: var(--button-bg);
        color: #fff;
        border:none;
        padding:0.6rem 1.2rem;
        border-radius:6px;
        box-shadow:0 2px 8px var(--button-shadow);
        cursor:pointer;
        transition: background 0.3s;
        font-size: 1rem;
        /* Se elimina position: sticky y relacionados */
        margin-top: 2rem;
      }
      #closeModalBtn {
        position:absolute;
        top:10px;
        right:14px;
        font-size:1.3rem;
        background:none;
        border:none;
        cursor:pointer;
        color: #9c0720;
        font-weight: bold;
      }

      #searchInput {
        margin: 1.5rem 0 1rem 0;
        padding: 0.7rem 1.1rem;
        border-radius: 8px;
        border: 1.5px solid var(--form-border);
        background: #fff8fa;
        font-size: 1.1rem;
        box-shadow: 0 2px 8px rgba(156,7,32,0.08);
        outline: none;
        transition: border 0.2s, box-shadow 0.2s;
      }
      #searchInput:focus {
        border: 2px solid var(--input-focus-border);
        box-shadow: 0 2px 12px rgba(156,7,32,0.13);
      }
      #recipesList {
        margin-top: 2rem;
        text-align: left;
        max-height: 50vh;
        overflow-y: auto;
        scrollbar-width: thin;
        scrollbar-color: #f1666d #fff8fa;
      }
      #recipesList::-webkit-scrollbar {
        width: 8px;
        background: #fff8fa;
      }
      #recipesList::-webkit-scrollbar-thumb {
        background: #f1666d;
        border-radius: 4px;
      }

      @keyframes fadeIn {
        from {
          opacity: 0;
          transform: scale(0.9);
        }
        to {
          opacity: 1;
          transform: scale(1);
        }
      }
    </style>
    <script>
      document.addEventListener("DOMContentLoaded", () => {
        const userInfo = document.getElementById("user-info");
        const userName = localStorage.getItem("userName");
        if (userName) {
          userInfo.textContent = `Hola, ${userName}`;
        } else {
          userInfo.textContent = "Hola, Usuario";
        }
      });
    </script>
  </head>
  <body>
    <div class="background-design"></div>
    <nav>
      <a href="#" id="navOpenModal">Registrar Nueva Receta</a>
      <a href="#" id="btnVegetarianas">Vegetarianas</a>
      <a href="#" id="btnCarnivoras">Carnívoras</a>
      <a href="#" id="btnVeganas">Veganas</a>
      <a href="#" id="btnFavoritas">Favoritas</a>
    </nav>
    <section>
      <div class="user-info" id="user-info"></div>
      <h1>Bienvenido a la Página Principal</h1>
      <p>Selecciona una opción del menú para comenzar.</p>
      <input type="text" id="searchInput" placeholder="Buscar recetas por título..." />
      <div id="recipesList"></div>
    </section>

    <div id="modal">
      <form id="recipeForm" enctype="multipart/form-data" autocomplete="off">
        <button type="button" id="closeModalBtn" title="Cerrar">✖</button>
        <label>
          Imagen:
          <div style="display: flex; align-items: center; gap: 1rem;">
            <input type="file" name="image" id="imageInput" accept="image/*" style="display:none;" required />
            <button type="button" id="customImageBtn">Seleccionar imagen</button>
            <span id="imageFileName"></span>
          </div>
        </label>
        <label>
          Título:
          <input type="text" name="title" required />
        </label>
        <label>
          Categoría:
          <select name="category" required>
            <option value="vegetariana">Vegetariana</option>
            <option value="carnivora">Carnívora</option>
            <option value="vegana">Vegana</option>
          </select>
        </label>
        <label>
          Ingredientes:
          <div id="ingredientsList">
            <div style="display:flex;gap:0.5rem;margin-bottom:0.4rem;">
              <input type="text" name="ingredient" required placeholder="Ingrediente" style="flex:1;" />
              <button type="button" class="removeIngredientBtn" style="display:none;" title="Quitar ingrediente">–</button>
            </div>
          </div>
          <button type="button" id="addIngredientBtn">+ Agregar ingrediente</button>
        </label>
        <label>
          Preparación:
          <textarea name="instructions" required></textarea>
        </label>
        <button type="submit">Guardar</button>
      </form>
    </div>

    <script>
      // Imagen estilizada
      document.getElementById('customImageBtn').onclick = function() {
        document.getElementById('imageInput').click();
      };
      document.getElementById('imageInput').onchange = function() {
        document.getElementById('imageFileName').textContent = this.files.length ? this.files[0].name : '';
      };

      // Ingredientes dinámicos
      const ingredientsList = document.getElementById('ingredientsList');
      const addIngredientBtn = document.getElementById('addIngredientBtn');
      addIngredientBtn.onclick = function() {
        const div = document.createElement('div');
        div.style.display = 'flex';
        div.style.gap = '0.5rem';
        div.style.marginBottom = '0.4rem';
        div.innerHTML = `
          <input type="text" name="ingredient" required placeholder="Ingrediente" style="flex:1;" />
          <button type="button" class="removeIngredientBtn" title="Quitar ingrediente">–</button>
        `;
        div.querySelector('.removeIngredientBtn').onclick = function() {
          ingredientsList.removeChild(div);
          updateRemoveButtons();
        };
        ingredientsList.appendChild(div);
        updateRemoveButtons();
      };
      function updateRemoveButtons() {
        const btns = ingredientsList.querySelectorAll('.removeIngredientBtn');
        if (btns.length > 1) {
          btns.forEach(btn => btn.style.display = '');
        } else {
          btns.forEach(btn => btn.style.display = 'none');
        }
      }
      updateRemoveButtons();

      // Modal control
      const modal = document.getElementById('modal');
      const closeBtn = document.getElementById('closeModalBtn');
      document.getElementById("navOpenModal").addEventListener("click", function(e) {
        e.preventDefault();
        modal.classList.add('active');
      });
      closeBtn.addEventListener('click', () => { modal.classList.remove('active'); });
      modal.addEventListener('click', (e) => {
        if (e.target === modal) modal.classList.remove('active');
      });

      // Modifica el envío del formulario para juntar ingredientes y enviar token
      const form = document.getElementById('recipeForm');
      form.addEventListener('submit', async (e) => {
        e.preventDefault();
        const formData = new FormData(form);
        const ingredientInputs = ingredientsList.querySelectorAll('input[name="ingredient"]');
        const ingredients = Array.from(ingredientInputs).map(i => i.value.trim()).filter(Boolean);
        formData.delete('ingredient');
        formData.append('ingredients', ingredients.join('\n'));
        try {
          const token = localStorage.getItem('token');
          const res = await fetch('http://localhost:4322/api/recipes', {
            method: 'POST',
            headers: {
              'Authorization': 'Bearer ' + token
            },
            body: formData
          });
          if (res.ok) {
            alert('Receta registrada exitosamente');
            form.reset();
            modal.classList.remove('active');
            fetchAndRenderRecipes(document.getElementById("searchInput").value.trim(), window.activeCategory || "");
            document.getElementById('imageFileName').textContent = '';
            while (ingredientsList.children.length > 1) ingredientsList.removeChild(ingredientsList.lastChild);
            updateRemoveButtons();
          } else {
            const err = await res.json();
            alert('Error: ' + (err.error || 'al registrar la receta'));
          }
        } catch (err) {
          alert('Error de red');
        }
      });

      // Variable global para recetas
      let allRecipes = [];

      // Modifica fetchAndRenderRecipes para guardar todas las recetas en allRecipes
      async function fetchAndRenderRecipes(filter = "", category = "") {
        try {
          const res = await fetch('/api/recipes');
          const data = await res.json();
          allRecipes = Array.isArray(data) ? data : [];
          let recipes = allRecipes;

          if (category) {
            recipes = recipes.filter(r =>
              r.category && r.category.trim().toLowerCase() === category.trim().toLowerCase()
            );
          }

          if (filter) {
            recipes = recipes.filter(r =>
              r.title && r.title.toLowerCase().includes(filter.toLowerCase())
            );
          }

          renderRecipes(recipes);
        } catch (err) {
          renderRecipes([]);
        }
      }

      function renderRecipes(recipes) {
        const list = document.getElementById("recipesList");
        if (!recipes.length) {
          list.innerHTML = "<p>No se encontraron recetas.</p>";
          return;
        }
        list.innerHTML = recipes.map(recipe => `
          <div style="background:rgba(255,255,255,0.85);color:#222;border-radius:9px;box-shadow:0 2px 8px rgba(156,7,32,0.09);padding:1rem;margin-bottom:1.2rem;text-align:left;">
            ${recipe.image ? `<img src="/uploads/${recipe.image}" alt="${recipe.title}" style="max-width:120px;border-radius:8px;float:right;margin-left:1rem;margin-bottom:1rem;">` : ""}
            <h3 style="margin:0 0 0.5rem 0;">${recipe.title}</h3>
            <span style="font-size:0.95rem;background:#9c0720;color:#fff;padding:2px 8px;border-radius:4px;">${recipe.category || "Sin Categoría"}</span>
            <p style="margin-top:0.5rem;"><b>Ingredientes:</b><br> ${recipe.ingredients ? recipe.ingredients.replace(/\n/g, '<br>') : ""}</p>
            <p><b>Preparación:</b> ${recipe.instructions}</p>
            <div style="clear:both;"></div>
          </div>
        `).join("");
      }

      // Buscar mientras se escribe
      document.getElementById("searchInput").addEventListener("input", (e) => {
        if (window.activeCategory) {
          const filtered = allRecipes
            .filter(r => r.category && r.category.trim().toLowerCase() === window.activeCategory)
            .filter(r => r.title && r.title.toLowerCase().includes(e.target.value.trim().toLowerCase()));
          renderRecipes(filtered);
        } else {
          fetchAndRenderRecipes(e.target.value.trim());
        }
      });

      // Al cargar, trae todas las recetas (sin filtro)
      fetchAndRenderRecipes();

      // Manejo de botones de categoría
      window.activeCategory = ""; // para saber si hay una categoría activa

      document.getElementById("btnVegetarianas").addEventListener("click", function(e) {
        e.preventDefault();
        window.activeCategory = "vegetariana";
        fetchAndRenderRecipes(document.getElementById("searchInput").value.trim(), "vegetariana");
      });
      document.getElementById("btnCarnivoras").addEventListener("click", function(e) {
        e.preventDefault();
        window.activeCategory = "carnivora";
        fetchAndRenderRecipes(document.getElementById("searchInput").value.trim(), "carnivora");
      });
      document.getElementById("btnVeganas").addEventListener("click", function(e) {
        e.preventDefault();
        window.activeCategory = "vegana";
        fetchAndRenderRecipes(document.getElementById("searchInput").value.trim(), "vegana");
      });
      document.getElementById("btnFavoritas").addEventListener("click", function(e) {
        e.preventDefault();
        window.activeCategory = "favoritas";
        // Si tienes una propiedad especial para favoritas, cámbiala aquí.
        const filtered = allRecipes.filter(r => r.category && r.category.trim().toLowerCase() === "favoritas");
        renderRecipes(filtered);
      });

    </script>
  </body>
</html>