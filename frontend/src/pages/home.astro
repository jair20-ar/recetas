---
---
<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>PÃ¡gina Principal</title>
    <style>
      :root {
        --rojo-dark: #610000;
        --rojo-main: #9c0720;
        --rojo-claro: #f1666d;
        --bg-color: linear-gradient(135deg, var(--rojo-dark), var(--rojo-main), var(--rojo-claro));
        --text-color: #ffffff;
        --form-bg: rgba(255, 255, 255, 0.2);
        --form-border: rgba(255, 255, 255, 0.3);
        --form-shadow: rgba(0, 0, 0, 0.4);
        --dropdown-bg: #fff;
        --dropdown-shadow: 0 4px 18px #9c072055;
        --dropdown-border: #f1666d;
      }
      body {
        margin: 0;
        font-family: 'Montserrat', 'Arial', sans-serif;
        background: var(--bg-color);
        color: var(--text-color);
        min-height: 100vh;
        text-align: center;
        position: relative;
        letter-spacing: 0.01em;
      }
      .background-design {
        position: absolute;
        top: 0;
        left: 0;
        width: 100vw;
        height: 100vh;
        background: var(--bg-color);
        clip-path: polygon(
          25% 0%,
          100% 0%,
          75% 50%,
          100% 100%,
          25% 100%,
          0% 50%
        );
        z-index: 0;
        opacity: 0.92;
        filter: blur(1px);
      }
      .user-profile-container {
        position: absolute;
        top: 22px;
        left: 30px;
        z-index: 30;
        display: flex;
        align-items: center;
        gap: 0.7em;
      }
      .profile-btn {
        display: flex;
        align-items: center;
        gap: 0.7em;
        background: var(--form-bg);
        border: 1.1px solid var(--form-border);
        border-radius: 23px;
        cursor: pointer;
        padding: 0.36em 1em 0.36em 0.36em;
        color: var(--text-color);
        font-size: 1.14rem;
        font-weight: 600;
        box-shadow: 0 2px 9px #61000022;
        transition: background 0.2s, box-shadow 0.2s;
        min-width: 40px;
        outline: none;
        position: relative;
        height: 44px;
      }
      .profile-btn:hover, .profile-btn:focus {
        background: rgba(255,255,255,0.26);
        box-shadow: 0 4px 18px #9c072055;
      }
      .profile-avatar {
        width: 34px;
        height: 34px;
        border-radius: 50%;
        background: linear-gradient(135deg,#fff,#f1666d99 90%);
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.28rem;
        border: 2px solid #f1666d;
        box-shadow: 0 2px 8px #9c072066;
      }
      .profile-dropdown {
        position: absolute;
        left: 0;
        top: 110%;
        min-width: 205px;
        background: var(--dropdown-bg);
        color: #9c0720;
        border: 1.2px solid var(--dropdown-border);
        border-radius: 13px;
        box-shadow: var(--dropdown-shadow);
        z-index: 99;
        padding: 1.1em 1em 1.2em 1em;
        display: none;
        flex-direction: column;
        animation: fadeIn 0.23s;
      }
      .profile-dropdown.active {
        display: flex;
      }
      .dropdown-header {
        font-weight: 700;
        font-size: 1.09rem;
        margin-bottom: 0.9em;
        letter-spacing: 0.01em;
        display: flex;
        align-items: center;
        gap: 0.45em;
      }
      .dropdown-option {
        cursor: pointer;
        padding: 0.48em 0.4em;
        border-radius: 7px;
        transition: background 0.18s, color 0.18s;
        font-size: 1.07rem;
        margin-bottom: 0.24em;
        text-align: left;
      }
      .dropdown-option:hover {
        background: #f1666d22;
        color: #610000;
      }
      .dropdown-divider {
        border: none;
        border-top: 1.1px solid #f1666d33;
        margin: 0.6em 0 1em 0;
      }
      .my-recipes-list {
        margin-top: 0.5em;
        max-height: 170px;
        overflow-y: auto;
        padding-left: 0.2em;
        font-size: 0.99rem;
      }
      .my-recipes-list-title {
        font-weight: 600;
        font-size: 1.01rem;
        margin-bottom: 0.4em;
        color: #9c0720;
      }
      .my-recipes-item {
        margin-bottom: 0.3em;
        color: #9c0720;
        display: flex;
        align-items: center;
        gap: 0.3em;
      }
      .my-recipes-item img {
        width: 24px;
        height: 24px;
        border-radius: 4px;
        object-fit: cover;
        border: 1.1px solid #f1666d55;
      }
      .my-recipes-item .editRecipeBtn, .my-recipes-item .deleteRecipeBtn {
        background: none;
        border: none;
        color: #f1666d;
        font-size: 1.1em;
        cursor: pointer;
        padding: 2px 7px 2px 2px;
        border-radius: 4px;
        transition: background 0.18s;
        margin-left: 2px;
        display: flex;
        align-items: center;
        justify-content: center;
      }
      .my-recipes-item .deleteRecipeBtn {
        color: #9c0720;
        font-size: 1.13em;
        padding: 2px 6px 2px 2px;
      }
      .my-recipes-item .editRecipeBtn:hover,
      .my-recipes-item .deleteRecipeBtn:hover {
        background: #f1666d22;
      }
      nav {
        background: var(--form-bg);
        border: 1px solid var(--form-border);
        border-radius: 18px;
        box-shadow: 0 4px 22px var(--form-shadow);
        padding: 1.05rem 1.15rem;
        width: 90%;
        max-width: 610px;
        backdrop-filter: blur(10px);
        display: flex;
        justify-content: center;
        align-items: center;
        gap: 1.35rem;
        margin: 2.5rem auto 2rem auto;
        position: relative;
        z-index: 2;
      }
      nav a, nav button {
        color: var(--text-color);
        text-decoration: none;
        font-size: 1.19rem;
        transition: color 0.3s, background 0.3s, box-shadow 0.3s;
        background: none;
        border: none;
        cursor: pointer;
        font-family: inherit;
        padding: 0.51em 1.18em;
        border-radius: 10px;
        margin: 0 2px;
        font-weight: 600;
        box-shadow: none;
        outline: none;
        min-width: 0;
        min-height: 0;
        display: flex;
        align-items: center;
        justify-content: center;
        line-height: 1.15;
        position: relative;
        letter-spacing: 0.01em;
      }
      nav a:focus-visible, nav button:focus-visible {
        outline: 2px solid #f1666d;
        outline-offset: 2px;
      }
      nav a:hover, nav button:hover, nav a:focus, nav button:focus {
        color: #fff;
        background: linear-gradient(90deg,#f1666d 30%,#9c0720 100%);
        box-shadow: 0 2px 13px #f1666dbf;
        z-index: 1;
      }
      nav a[disabled], nav button[disabled] {
        opacity: 0.7;
        cursor: not-allowed;
        background: none !important;
        color: var(--text-color);
      }
      .custom-add-btn {
        background: linear-gradient(90deg,#f1666d 0%,#9c0720 100%);
        color: #fff;
        border: none;
        border-radius: 10px;
        padding: 0.51em 1.18em;
        font-size: 1.19rem;
        font-family: inherit;
        font-weight: 600;
        cursor: pointer;
        box-shadow: 0 2px 8px #f1666d44;
        transition: background 0.2s, box-shadow 0.2s;
        margin: 0 2px;
        min-width: 0;
        letter-spacing: 0.01em;
        display: flex;
        align-items: center;
        justify-content: center;
      }
      .custom-add-btn:hover {
        background: linear-gradient(90deg,#9c0720 0%,#f1666d 100%);
        box-shadow: 0 4px 14px #9c072088;
      }
      section {
        width: 93%;
        max-width: 520px;
        margin: 0 auto;
        background: var(--form-bg);
        border: 1.2px solid var(--form-border);
        border-radius: 15px;
        box-shadow: 0 4px 30px var(--form-shadow);
        padding: 2.1rem 1.5rem 1.4rem 1.5rem;
        backdrop-filter: blur(13px);
        position: relative;
        z-index: 1;
        font-size: 0.97rem;
      }
      h1 {
        font-size: 2.1rem;
        font-family: 'Montserrat', 'Arial', sans-serif;
        font-weight: 800;
        margin-bottom: 1.8rem;
        color: var(--text-color);
        letter-spacing: 0.025em;
        text-shadow: 0 3px 18px #61000050;
      }
      .user-info {
        margin-bottom: 0.8rem;
        font-size: 1.1rem;
        color: var(--text-color);
      }
      #modal {
        display: none;
        position: fixed;
        z-index: 1000;
        left: 0;
        top: 0;
        width: 100vw;
        height: 100vh;
        background: rgba(0,0,0,0.6);
        justify-content: center;
        align-items: center;
      }
      #modal.active {
        display: flex;
        overflow-y: auto;
        align-items: flex-start;
      }
      #recipeForm {
        background: #fff;
        color: #222;
        border-radius: 15px;
        padding: 1.1rem 1.2rem 1.4rem 1.2rem;
        box-shadow: 0 4px 22px #9c072045;
        min-width: 295px;
        display: flex;
        flex-direction: column;
        gap: 0.7rem;
        max-width: 95vw;
        max-height: 88vh;
        overflow-y: auto;
        border: 1.2px solid #f1666d;
        font-family: 'Montserrat', 'Arial', sans-serif;
        font-size: 0.97rem;
        align-items: stretch;
      }
      #recipeForm label {
        text-align:left;
        font-weight: bold;
        color: #9c0720;
        font-size: 0.97rem;
        margin-bottom: 0.3em;
      }
      #recipeForm input[type="text"],
      #recipeForm textarea,
      #recipeForm select {
        width: 100%;
        border: 1.4px solid var(--form-border);
        border-radius: 5px;
        padding: 0.45rem 0.7rem;
        box-sizing: border-box;
        margin: 0.22em 0 0.35em 0;
        font-family: inherit;
        font-size: 0.98rem;
        background: #f7f7f7;
        color: #610000;
        outline: none;
        transition: border 0.2s;
      }
      #recipeForm input[type="text"]:focus,
      #recipeForm textarea:focus,
      #recipeForm select:focus {
        border: 1.4px solid #9c0720;
        background: #fff;
      }
      #recipeForm textarea {
        resize: vertical;
        min-height: 60px;
      }
      #recipeForm input[type="file"] {
        display: none;
      }
      #customImageBtn {
        background: linear-gradient(90deg, #f1666d 0%, #9c0720 100%);
        color: #fff;
        border: none;
        padding: 0.38rem 1rem;
        border-radius: 6px;
        box-shadow: 0 2px 7px #9c07207a;
        cursor: pointer;
        font-size: 0.97rem;
        transition: background 0.3s;
        font-family: inherit;
        margin-right: 0.5rem;
      }
      #customImageBtn:hover {
        background: linear-gradient(90deg, #9c0720 0%, #f1666d 100%);
      }
      #imageFileName {
        color: #9c0720;
        font-size: 0.93rem;
        margin-left: 0.5rem;
      }
      #addIngredientBtn {
        background: linear-gradient(90deg, #f1666d 0%, #9c0720 100%);
        color: #fff;
        border: none;
        padding: 0.2rem 0.8rem;
        border-radius: 5px;
        box-shadow: 0 1px 3px #f1666d4a;
        margin-top: 0.2rem;
        cursor: pointer;
        font-size: 0.93rem;
        transition: background 0.3s;
        font-family: inherit;
      }
      #addIngredientBtn:hover {
        background: linear-gradient(90deg, #9c0720 0%, #f1666d 100%);
      }
      .removeIngredientBtn {
        background: none;
        border: none;
        color: #9c0720;
        font-size: 1.1rem;
        cursor: pointer;
        margin-left: 0.2rem;
        font-weight: bold;
        padding: 0 0.4em;
        border-radius: 4px;
        transition: background 0.18s;
      }
      .removeIngredientBtn:hover {
        background: #f1666d22;
      }
      #recipeForm button[type="submit"] {
        background: linear-gradient(90deg, #f1666d 0%, #9c0720 100%);
        color:#fff;
        border:none;
        padding:0.44rem 1.1rem;
        border-radius:7px;
        box-shadow:0 2px 8px #f1666d4a;
        cursor:pointer;
        transition: background 0.3s;
        font-size: 1.01rem;
        margin-top: 1.2rem;
        font-family: inherit;
        align-self: flex-end;
      }
      #recipeForm button[type="submit"]:hover {
        background: linear-gradient(90deg, #9c0720 0%, #f1666d 100%);
      }
      #closeModalBtn {
        position:absolute;
        top:10px;
        right:14px;
        font-size:1.11rem;
        background:none;
        border:none;
        cursor:pointer;
        color: #9c0720;
        font-weight: bold;
      }
      #ingredientsList > div {
        margin-bottom: 0.15em;
      }
      @keyframes fadeIn {
        from { opacity: 0; transform: scale(0.98);}
        to { opacity: 1; transform: scale(1);}
      }
    </style>
  </head>
  <body>
    <div class="background-design"></div>
    <!-- USER PROFILE DROPDOWN -->
    <div class="user-profile-container">
      <button class="profile-btn" id="profileBtn" type="button" tabindex="0">
        <span class="profile-avatar" id="profileAvatar">ð¤</span>
        <span id="profileName">Usuario</span>
      </button>
      <div class="profile-dropdown" id="profileDropdown">
        <div class="dropdown-header">
          <span class="profile-avatar" style="font-size:1.15em;">ð¤</span>
          <span id="dropdownUserName">Usuario</span>
        </div>
        <hr class="dropdown-divider" />
        <div class="dropdown-option" id="myRecipesBtn">ð² Mis Recetas</div>
        <div class="dropdown-option" id="logoutBtn">ð Cerrar sesiÃ³n</div>
        <div class="my-recipes-list" id="myRecipesList" style="display:none;">
          <div class="my-recipes-list-title">Tus recetas:</div>
          <div id="myRecipesItems"></div>
        </div>
      </div>
    </div>
    <!-- FIN PROFILE DROPDOWN -->
    <nav>
      <button id="navOpenModal" class="custom-add-btn">
        + Agregar Recetas
      </button>
      <a href="/vegetarianas">Vegetarianas</a>
      <a href="/carnivoras">CarnÃ­voras</a>
      <a href="/veganas">Veganas</a>
      <button id="btnFavoritas" disabled style="opacity:0.7;cursor:not-allowed;">Favoritas</button>
    </nav>
    <section>
      <div class="user-info" id="user-info"></div>
      <h1>Bienvenido a la PÃ¡gina Principal</h1>
      <p>Selecciona una opciÃ³n del menÃº para comenzar.</p>
    </section>
    <div id="modal">
      <form id="recipeForm" enctype="multipart/form-data" autocomplete="off">
        <button type="button" id="closeModalBtn" title="Cerrar">â</button>
        <label>
          Imagen:
          <div style="display: flex; align-items: center; gap: 0.6rem; margin-bottom: 0.4em;">
            <input type="file" name="image" id="imageInput" accept="image/*" style="display:none;" required />
            <button type="button" id="customImageBtn">Seleccionar imagen</button>
            <span id="imageFileName"></span>
          </div>
        </label>
        <label>
          TÃ­tulo:
          <input type="text" name="title" required placeholder="Ej: LasaÃ±a de verduras" />
        </label>
        <label>
          CategorÃ­a:
          <select name="category" required>
            <option value="vegetariana">Vegetariana</option>
            <option value="carnivora">CarnÃ­vora</option>
            <option value="vegana">Vegana</option>
          </select>
        </label>
        <label>
          Ingredientes:
          <div id="ingredientsList">
            <div style="display:flex;gap:0.5rem;">
              <input type="text" name="ingredient" required placeholder="Ingrediente" style="flex:1;" />
              <button type="button" class="removeIngredientBtn" style="display:none;" title="Quitar ingrediente">â</button>
            </div>
          </div>
          <button type="button" id="addIngredientBtn">+ Agregar ingrediente</button>
        </label>
        <label>
          PreparaciÃ³n:
          <textarea name="instructions" required placeholder="Describe los pasos de la preparaciÃ³n aquÃ­..."></textarea>
        </label>
        <button type="submit">Guardar</button>
      </form>
    </div>
    <script>
      // USER PROFILE DROPDOWN LOGIC
      let userName = localStorage.getItem("userName") || "Usuario";
      let userEmail = localStorage.getItem("email") || "";
      let userId = localStorage.getItem("userId") || "";
      document.getElementById("profileName").textContent = userName;
      document.getElementById("dropdownUserName").textContent = userName;

      // Dropdown open/close logic
      const profileBtn = document.getElementById("profileBtn");
      const profileDropdown = document.getElementById("profileDropdown");
      profileBtn.addEventListener("click", function(e) {
        profileDropdown.classList.toggle("active");
        if (profileDropdown.classList.contains("active")) {
          document.getElementById("myRecipesList").style.display = "none";
        }
      });
      // Close dropdown if clicking outside
      document.addEventListener("mousedown", function(e){
        if (!profileDropdown.contains(e.target) && !profileBtn.contains(e.target)){
          profileDropdown.classList.remove("active");
        }
      });

      // Logout
      document.getElementById("logoutBtn").addEventListener("click", function() {
        localStorage.clear();
        window.location.href = "/login";
      });

      // Mis Recetas CON EDITAR Y ELIMINAR (FILTRAR POR author_id y usar token en DELETE)
      document.getElementById("myRecipesBtn").addEventListener("click", function() {
        const listWrapper = document.getElementById("myRecipesList");
        const items = document.getElementById("myRecipesItems");
        if (listWrapper.style.display === "block") {
          listWrapper.style.display = "none";
          return;
        }
        fetch('http://localhost:4322/api/recipes')
          .then(res => res.json())
          .then(data => {
            // CAMBIO: FILTRO POR author_id, no userId
            const myRecipes = Array.isArray(data)
              ? data.filter(
                  r => (r.author_id && userId && String(r.author_id) === String(userId))
                )
              : [];
            if (!myRecipes.length) {
              items.innerHTML = "<div style='color:#9c0720;opacity:0.7;'>No has subido recetas.</div>";
            } else {
              items.innerHTML = myRecipes
                .map(r => {
                  let imageSrc = "";
                  if (r.image) {
                    imageSrc = r.image.startsWith("http")
                      ? r.image
                      : `http://localhost:4322/uploads/${encodeURIComponent(r.image)}`;
                  }
                  return `<div class="my-recipes-item" data-recipe-id="${r.id || r._id}">
                            ${imageSrc ? `<img src="${imageSrc}" alt="img">` : ""}
                            <span style="flex:1;">${r.title}</span>
                            <button class="editRecipeBtn" data-id="${r.id || r._id}" title="Editar">âï¸</button>
                            <button class="deleteRecipeBtn" data-id="${r.id || r._id}" title="Eliminar">ðï¸</button>
                          </div>`;
                })
                .join("");
            }
            listWrapper.style.display = "block";

            // CAMBIO: Eliminar receta usando token
            document.querySelectorAll('.deleteRecipeBtn').forEach(btn => {
              btn.onclick = function(e) {
                e.stopPropagation();
                const recipeId = btn.getAttribute("data-id");
                if (confirm("Â¿Seguro que deseas eliminar esta receta?")) {
                  const token = localStorage.getItem('token');
                  fetch(`http://localhost:4322/api/recipes/${recipeId}`, {
                    method: "DELETE",
                    headers: token && token.trim() !== "" && token !== "null" && token !== "undefined"
                      ? { 'Authorization': 'Bearer ' + token }
                      : {}
                  })
                  .then(res => {
                    if(res.ok) {
                      btn.closest('.my-recipes-item').remove();
                    } else {
                      res.json().then(err => {
                        alert("No se pudo eliminar la receta: " + (err.error || ""));
                      });
                    }
                  });
                }
              };
            });

            // Editar receta (aquÃ­ puedes abrir tu modal de ediciÃ³n o navegar a otra pÃ¡gina)
            document.querySelectorAll('.editRecipeBtn').forEach(btn => {
              btn.onclick = function(e) {
                e.stopPropagation();
                const recipeId = btn.getAttribute("data-id");
                // AquÃ­ puedes abrir tu modal de ediciÃ³n, por ejemplo:
                alert("FunciÃ³n de editar aÃºn no implementada. ID Receta: " + recipeId);
              };
            });
          });
      });

      // USER INFO GREETING
      document.getElementById("user-info").textContent = `Hola, ${userName}`;

      // MODAL Y FORMULARIO DE RECETA (igual que antes)
      document.getElementById('customImageBtn').onclick = function() {
        document.getElementById('imageInput').click();
      };
      document.getElementById('imageInput').onchange = function() {
        document.getElementById('imageFileName').textContent = this.files.length ? this.files[0].name : '';
      };

      // Ingredientes dinÃ¡micos
      const ingredientsList = document.getElementById('ingredientsList');
      const addIngredientBtn = document.getElementById('addIngredientBtn');
      addIngredientBtn.onclick = function() {
        const div = document.createElement('div');
        div.style.display = 'flex';
        div.style.gap = '0.5rem';
        div.innerHTML = `
          <input type="text" name="ingredient" required placeholder="Ingrediente" style="flex:1;" />
          <button type="button" class="removeIngredientBtn" title="Quitar ingrediente">â</button>
        `;
        div.querySelector('.removeIngredientBtn').onclick = function() {
          ingredientsList.removeChild(div);
          updateRemoveButtons();
        };
        ingredientsList.appendChild(div);
        updateRemoveButtons();
      };
      function updateRemoveButtons() {
        const btns = ingredientsList.querySelectorAll('.removeIngredientBtn');
        if (btns.length > 1) {
          btns.forEach(btn => btn.style.display = '');
        } else {
          btns.forEach(btn => btn.style.display = 'none');
        }
      }
      updateRemoveButtons();

      // Modal control
      const modal = document.getElementById('modal');
      const closeBtn = document.getElementById('closeModalBtn');
      document.getElementById("navOpenModal").addEventListener("click", function(e) {
        e.preventDefault();
        modal.classList.add('active');
      });
      closeBtn.addEventListener('click', () => { modal.classList.remove('active'); });
      modal.addEventListener('click', (e) => {
        if (e.target === modal) modal.classList.remove('active');
      });

      // Modifica el envÃ­o del formulario para juntar ingredientes y enviar token
      const form = document.getElementById('recipeForm');
      form.addEventListener('submit', async (e) => {
        e.preventDefault();
        const formData = new FormData(form);
        const ingredientInputs = ingredientsList.querySelectorAll('input[name="ingredient"]');
        const ingredients = Array.from(ingredientInputs).map(i => i.value.trim()).filter(Boolean);
        formData.delete('ingredient');
        formData.append('ingredients', ingredients.join('\n'));
        if(userId) formData.append('userId', userId);
        try {
          const token = localStorage.getItem('token');
          const res = await fetch('http://localhost:4322/api/recipes', {
            method: 'POST',
            headers: token && token.trim() !== "" && token !== "null" && token !== "undefined"
              ? { 'Authorization': 'Bearer ' + token }
              : {},
            body: formData
          });
          if (res.ok) {
            alert('Receta registrada exitosamente');
            form.reset();
            modal.classList.remove('active');
            document.getElementById('imageFileName').textContent = '';
            while (ingredientsList.children.length > 1) ingredientsList.removeChild(ingredientsList.lastChild);
            updateRemoveButtons();
          } else {
            const err = await res.json();
            alert('Error: ' + (err.error || 'al registrar la receta'));
          }
        } catch (err) {
          alert('Error de red');
        }
      });
    </script>
  </body>
</html>